<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pentest Notes – </title>
    <link>https://pentestnotes.iselt.top/docs/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/</link>
    <description>Recent content on Pentest Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    
	  <atom:link href="https://pentestnotes.iselt.top/docs/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title></title>
      <link>https://pentestnotes.iselt.top/docs/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/codeql-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pentestnotes.iselt.top/docs/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/codeql-java/</guid>
      <description>
        
        
        &lt;h1&gt;CodeQL-Java&lt;/h1&gt;&lt;p&gt;语法：&lt;a href=&#34;https://codeql.github.com/docs/codeql-language-guides/codeql-library-for-java/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://codeql.github.com/docs/codeql-language-guides/codeql-library-for-java/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Class Tree&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;class-tree&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#class-tree&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Element&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Package&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CompilationUnit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Type&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PrimitiveType&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;char&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;double&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;short&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;nulltype&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Reftype&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Interface&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EnumType&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Variable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://pentestnotes.iselt.top/docs/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/sql%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pentestnotes.iselt.top/docs/%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0/4.%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/java%E5%AE%A1%E8%AE%A1/sql%E6%B3%A8%E5%85%A5/</guid>
      <description>
        
        
        &lt;h1&gt;Java审计-SQL注入&lt;/h1&gt;&lt;h2&gt;三种数据库模式&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;三种数据库模式&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e4%b8%89%e7%a7%8d%e6%95%b0%e6%8d%ae%e5%ba%93%e6%a8%a1%e5%bc%8f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JDBC&lt;/code&gt;：Java Database Connectivity，Java数据库连接，是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Mybatis&lt;/code&gt;（最常用）：MyBatis是一个优秀的持久层框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Hibernate&lt;/code&gt;：Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以使用面向对象的思维来操纵数据库。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;判断是否出现注入&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;判断是否出现注入&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%88%a4%e6%96%ad%e6%98%af%e5%90%a6%e5%87%ba%e7%8e%b0%e6%b3%a8%e5%85%a5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;原生JDBC是否存在直接拼接SQL语句（使用+，或者使用StringBUilder append()），未经过预编译；
Mybatis使用${}；
Hibernate、JPA默认是经过预编译的，但是如果开发自己编写的SQL语句，也需要进行检查；
Java是强类型语言，当注入参数为long、int等数字类型时无法进行注入；
找到危险函数位置之后，向上搜索，找函数、方法调用位置，直到请求入口（controller层），判断是否存在无害化处理、无害化处理是否严格；
参考：&lt;a href=&#34;https://mp.weixin.qq.com/s/9t3t6qxosGsKiXMIRtMoPw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://mp.weixin.qq.com/s/9t3t6qxosGsKiXMIRtMoPw&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;判断使用的数据库模式&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;判断使用的数据库模式&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%88%a4%e6%96%ad%e4%bd%bf%e7%94%a8%e7%9a%84%e6%95%b0%e6%8d%ae%e5%ba%93%e6%a8%a1%e5%bc%8f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;看项目说明使用的技术框架&lt;/li&gt;
&lt;li&gt;看引用中加载那些技术框架&lt;/li&gt;
&lt;li&gt;看配置源码中相关配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;入口确定&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;入口确定&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%85%a5%e5%8f%a3%e7%a1%ae%e5%ae%9a&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;是否使用预编译技术，预编译是否完整。&lt;/li&gt;
&lt;li&gt;定位SQL语句上下文，查看是否有参数直接拼接，是否有对模糊查询关键字的过滤。&lt;/li&gt;
&lt;li&gt;Mybatis框架则搜索${}，四种情况无法预编译：like模糊查询、order by排序、范围查询in、动态表名/列名，只能拼接，所以还是需要手工防注入，此时可查看相关逻辑是否正确。&lt;/li&gt;
&lt;li&gt;JPA搜索JpaSort.unsafe()，查看是否用实体之外的字段对查询结果排序，进行了SQL的拼接。以及查看EntityManager的使用，也可能存在拼接SQL的情况。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Statement&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;createStatement&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PrepareStatement&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;like &#39;%${&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;in(${&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;in (${&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;${&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;order by&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setObject(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setInt(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setString(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setSQLXML(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;createQuery(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;createSQLQuery(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;createNativeQuery&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;hellip;&amp;hellip;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;案例1-非框架JDBC-Jfinal_cms论坛系统&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;案例1-非框架jdbc-jfinal_cms论坛系统&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%a1%88%e4%be%8b1-%e9%9d%9e%e6%a1%86%e6%9e%b6jdbc-jfinal_cms%e8%ae%ba%e5%9d%9b%e7%b3%bb%e7%bb%9f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jflyfox/jfinal_cms&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/jflyfox/jfinal_cms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;分析：确定非框架-&amp;gt;搜关键字&lt;code&gt;order by append-&amp;gt;getBaseForm()-&amp;gt;getOrderBy()-&amp;gt;getOrderColumn-&amp;gt;orderColumn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;路由：&lt;code&gt;Post: /admin/advicefeedback/list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参数：&lt;code&gt;form.orderColumn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拼接：&lt;code&gt;order by &amp;quot;).append(orderBy);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Poc：&lt;code&gt;&#39; xxx #&lt;/code&gt; (直接sqlmap梭哈)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;案例2-SpringBoot+Mybatis-Oasys办公系统&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;案例2-springbootmybatis-oasys办公系统&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%a1%88%e4%be%8b2-springbootmybatis-oasys%e5%8a%9e%e5%85%ac%e7%b3%bb%e7%bb%9f&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitee.com/aaluoxiang/oa_system&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gitee.com/aaluoxiang/oa_system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;分析：确定Mybatis框架-&amp;gt;搜关键字&lt;code&gt;${-&amp;gt;%${baseKey}%-&amp;gt;sortMyNotice-&amp;gt;sortMyNotice-&amp;gt;informListPaging-&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;路由：&lt;code&gt;Post: /informlistpaging&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参数：&lt;code&gt;baseKey&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拼接：&lt;code&gt;and n.title LIKE &#39;%${baseKey}%&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Poc：&lt;code&gt;&#39; xxx #&lt;/code&gt; (直接sqlmap梭哈)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;案例3-SpringBoot+Mybatis-Ruoyi若依系统 V4.6&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;案例3-springbootmybatis-ruoyi若依系统-v46&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%a1%88%e4%be%8b3-springbootmybatis-ruoyi%e8%8b%a5%e4%be%9d%e7%b3%bb%e7%bb%9f-v46&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitee.com/y_project/RuoYi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gitee.com/y_project/RuoYi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基于springboot中，执行SQL三个调用：
&lt;ol&gt;
&lt;li&gt;业务层调用dao层&lt;/li&gt;
&lt;li&gt;controller调用Service层间接调用dao层&lt;/li&gt;
&lt;li&gt;controller直接调用dao层&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;分析：确定Mybatis框架-&amp;gt;搜关键字&lt;code&gt;${-&amp;gt;updateDeptStatus-&amp;gt;updateParentDeptStatus-&amp;gt;updateDept-&amp;gt;editSave&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;路由：&lt;code&gt;Post: /system/dept/edit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;参数：&lt;code&gt;ancestors&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拼接：&lt;code&gt;where dept_id in (${ancestors})&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Poc：&lt;code&gt;DeptName=1&amp;amp;DeptId=100&amp;amp;ParentId=12&amp;amp;Status=0&amp;amp;OrderNum=1&amp;amp;ancestors=0)or(extractvalue(1,concat((select user()))));#&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
